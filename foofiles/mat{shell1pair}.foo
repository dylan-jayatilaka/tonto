!===================================================================
! MAT{SHELL1PAIR} : a vector of pairs of gaussian SHELL1PAIR's.
!
! This object is used to store precalculated information used in 
! ERI integral evaluation.
!
! Copyright (C) Dylan Jayatilaka, 2000
!
! This library is free software; you can redistribute it and/or
! modify it under the terms of the GNU Library General Public
! License as published by the Free Software Foundation; either
! version 2 of the License, or (at your option) any later version.
!
! This library is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
! Library General Public License for more details.
!
! You should have received a copy of the GNU Library General Public
! License along with this library; if not, write to the
! Free Software Foundation, Inc., 59 Temple Place - Suite 330,
! Boston, MA  02111-1307, USA.
!===================================================================

module MAT{SHELL1PAIR}

   implicit none

contains

!  =================
!  Memory allocation
!  =================

   create(dim1,dim2) ::: get_from(MAT{OBJECT}), leaky, PURE
   ! Allocate object
   end

   destroy ::: get_from(MAT{OBJECT}), leaky, PURE
   ! Deallocate the object
   end

   destroy_ptr_part ::: get_from(MAT{OBJECT}), leaky, PURE
   ! Destroy the pointer parts of self
   end

!  ============================
!  Size-of and shape operations 
!  ============================

   is_same_shape_as(a) result (res) ::: get_from(MAT{OBJECT}), pure
   ! Returns TRUE if the matrix "a" has the same shape as "self"
   end

   is_transposed_shape_of(a) result (res) ::: get_from(MAT{OBJECT}), pure
   ! Returns TRUE if the matrix "a" is the transposed shape of self
   end

   is_square result (res) ::: get_from(MAT{OBJECT}), pure
   ! Returns TRUE if the matrix is square
   end

!  ==============================
!  Make precomputed integral data
!  ==============================

   make_precomputed_shellpairs(basis) ::: PURE
   ! Make the SHELL1PAIR matrix "self" which includes non-positional
   ! precomputed data for the "basis" set needed for gaussian ERI
   ! integrals.
      self  :: OUT
      basis :: VEC{BASIS}, IN

      i,j,a,b,p,q :: INT

      ! Loop over bases "p"
      p = 0
      do i = 1,basis.dim
      do a = 1,basis(i).n_shell

         p = p + 1
       
         ! Loop over bases "q"
         q = 0
         do j = 1,basis.dim
         do b = 1,basis(j).n_shell
       
            q = q + 1
       
            ! Set the shells; positions not set
            self(p,q).set_a(basis(i).shell(a))
            self(p,q).set_b(basis(j).shell(b))
       
            ! Precalculate non-positional info
            self(p,q).make_precalculated_data
       
         end
         end

      end
      end

   end

!  ======
!  Output
!  ======

   dump(object_name,lower_triangle) ::: get_from(MAT{OBJECT})
   ! Dump a matrix object in text format
   end

   dmpp(object_name,lower_triangle) ::: get_from(MAT{OBJECT})
   ! Dump an allocatable matrix object in text format
   end

end
