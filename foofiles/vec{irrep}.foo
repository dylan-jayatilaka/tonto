!===================================================================
!
! VEC{IRREP}: For representing an array of irreps
!
! Copyright (C) Daniel Grimwood, 1999
!
! This library is free software; you can redistribute it and/or
! modify it under the terms of the GNU Library General Public
! License as published by the Free Software Foundation; either
! version 2 of the License, or (at your option) any later version.
!
! This library is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
! Library General Public License for more details.
!
! You should have received a copy of the GNU Library General Public
! License along with this library; if not, write to the
! Free Software Foundation, Inc., 59 Temple Place - Suite 330,
! Boston, MA  02111-1307, USA.
!===================================================================

module VEC{IRREP}

   implicit none

contains

!  ==========
!  Allocation
!  ==========

   create(dim) ::: get_from(VEC{OBJECT}), leaky, PURE
   ! Allocate vector
   end

   destroy ::: get_from(VEC{OBJECT}), leaky, PURE
   ! Deallocate the vector
   end

   destroy_ptr_part ::: leaky, PURE
   ! Destroy the pointer parts of an irrepvec
      self :: INOUT

      i :: INT

      do i = 1,size(self)
         self(i).destroy_ptr_part
      end

   end

!  ===========
!  Set methods
!  ===========

   set_dimensions(val) ::: pure
   ! Set the dimensions of the irreps
      self :: INOUT
      val :: INT, IN
      self(:).dimension = val
   end

   set_dimensions(values) ::: pure
   ! Set the dimensions of the irreps
      self :: INOUT
      values :: VEC{INT}, IN
      self(:).dimension = values
   end

   set_labels(values) ::: pure
   ! Set the labels for the irreps
      self :: INOUT
      values :: VEC{STR}, IN
      self(:).label = values
   end

end
