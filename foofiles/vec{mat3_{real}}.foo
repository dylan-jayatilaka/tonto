!---------------------------------------------------------------------------
!
! VEC{MAT3_{REAL}}: Vector of MAT3{REAL} matrices
!
! Copyright (C) Daniel Grimwood, 1999
!
! This library is free software; you can redistribute it and/or
! modify it under the terms of the GNU Library General Public
! License as published by the Free Software Foundation; either
! version 2 of the License, or (at your option) any later version.
!
! This library is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
! Library General Public License for more details.
!
! You should have received a copy of the GNU Library General Public
! License along with this library; if not, write to the
! Free Software Foundation, Inc., 59 Temple Place - Suite 330,
! Boston, MA  02111-1307, USA.
!
!---------------------------------------------------------------------------

module VEC{MAT3_{REAL}}

   implicit none

contains

!  ==========
!  Allocation
!  ==========

   create(dim) ::: get_from(VEC{MAT3_{INTRINSIC}}), leaky, PURE
   ! Create the object with dimension "dim"
   end

   create(lb,ub) ::: get_from(VEC{MAT3_{INTRINSIC}}), leaky, PURE
   ! Create the object with lower and upper bounds "lb" and "ub"
   end

   destroy ::: get_from(VEC{MAT3_{INTRINSIC}}), leaky, PURE
   ! Destroy the object
   end

   nullify_ptr_part ::: get_from(VEC{MAT3_{INTRINSIC}}), PURE
   ! Nullify the pointer parts
   end

   destroy_ptr_part ::: get_from(VEC{MAT3_{INTRINSIC}}), leaky, PURE
   ! Destroy the pointer parts
   end

!  ====
!  Copy
!  ====

   create_copy(m) ::: get_from(VEC{MAT3_{INTRINSIC}}), leaky
   ! Create a copy of "m"
   end

   copy(m) ::: get_from(VEC{MAT3_{INTRINSIC}}), leaky
   ! Make a copy of "m"
   end

!  ======
!  Sizing
!  ======

   lb result (res) ::: get_from(VEC{MAT3_{INTRINSIC}}), pure
   ! Returns the lower bound of self
   end

   ub result (res) ::: get_from(VEC{MAT3_{INTRINSIC}}), pure
   ! Returns the upper bound of self
   end

!  ===========
!  Set methods
!  ===========

   make_gaussian_xyz_matrices(ptr) ::: leaky
   ! Return representation matrices for the s, p, d, f, and g (l = 0 ... 4)
   ! xyz cartesian gaussian shell components from a list of the p xyz
   ! representation matrices.
   ! NOTE: nothing in self in pointer assigned, so it can be destroyed safely.
      self :: PTR
      ptr :: MAT3{REAL}

   ENSURE(ptr.dim1==3,"wrong 1st dimension, self")
   ENSURE(ptr.dim2==3,"wrong 1st dimension, self")
   ENSURE(ptr.dim3>0,"no p-type representation matrices")

      order :: INT

      order = ptr.dim3

      self.create(0,4)
      self(0).element.create(1,1,order)
      self(1).element.create(3,3,order)

      ! Now assign the transformation matrices
      self(0).element = ONE
      self(1).element = ptr
      self(2).element => ptr.gaussian_d_xyz_matrices
      self(3).element => ptr.gaussian_f_xyz_matrices
      self(4).element => ptr.gaussian_g_xyz_matrices

   end

end
