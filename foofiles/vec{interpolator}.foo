!---------------------------------------------------------------------------
!
! VEC{INTERPOLATOR}: INTERPOLATOR vectors
!
! Copyright (C) Dylan Jayatilaka, 2002
!
! This library is free software; you can redistribute it and/or
! modify it under the terms of the GNU Library General Public
! License as published by the Free Software Foundation; either
! version 2 of the License, or (at your option) any later version.
! 
! This library is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
! Library General Public License for more details.
! 
! You should have received a copy of the GNU Library General Public
! License along with this library; if not, write to the
! Free Software Foundation, Inc., 59 Temple Place - Suite 330,
! Boston, MA  02111-1307, USA.
!
!---------------------------------------------------------------------------

module VEC{INTERPOLATOR}

   implicit none

contains

!  ==========
!  Allocation
!  ==========

   create(dim) ::: get_from(VEC{OBJECT}), leaky, PURE
   ! Allocate vector
   end

   destroy ::: get_from(VEC{OBJECT}), leaky, PURE
   ! Deallocate the vector
   end

   nullify_ptr_part ::: get_from(VEC{OBJECT}), pure
   ! Nullify the pointer parts of self
   end

   destroy_ptr_part ::: get_from(VEC{OBJECT}), PURE
   ! Destroy the pointer parts of self
   end

!  ====
!  Copy
!  ====

!  ===========
!  Set methods
!  ===========

   set_defaults ::: get_from(VEC{OBJECT}), PURE
   ! Set default values
   end

!  ===========================
!  Non-list based I/O routines
!  ===========================

   read_keywords ::: get_from(VEC{OBJECT})
   ! Read in and process normal (non list-type) keywords from "stdin".
   end

   process_keyword(keyword) 
   ! Process a normal (non list-type) "keyword".
      self :: PTR
      keyword :: STR
      word :: STR
      word = keyword
      word.to_lower_case
      select case (word)
       case("}") ! do nothing.
       case("redirect          "); .redirect
       case("revert            "); .revert
       case default;               UNKNOWN(word)
      end
   end

   redirect ::: get_from(OBJECT), leaky
   ! Redirect input
   end

   revert ::: get_from(OBJECT), leaky
   ! Revert back to previous stdin file
   end

end
