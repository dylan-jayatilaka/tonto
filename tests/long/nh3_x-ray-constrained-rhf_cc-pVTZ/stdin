
! This is an annotated example tonto input file for a NH3 X-ray
! constrained Hartree-Fock wavefunction calculation. Use it as a
! template.

! To run this file, it must be named "stdin"; then run the
! "run_molecule.exe" program in the same directory as the file.

! At most points in this input you can type a question mark.
! In the output you will see a list of allowed keywords.


{

! Input begins with an open curly bracket and ends with close brace "}".
! Always make sure your curly brackets are matched! The input format
! is free (but there is a limit of 512 characters per line). Indent
! for clarity.


   name=     nh3
   ! Set the job name to "nh3".
   ! This is used to defined temporary file names


   output_style_options= {
      real_precision= 4
   }
   ! Set the precision and width of the output


   basis_name= cc-pVTZ

   ! Set the QM basis set directory and basis set name. The basis set
   ! names appear in the basis set directory. Don't use anything
   ! smaller than DZP, unless you know what you are doing.


   charge=   0
   ! The overall molecular charge is 0


   multiplicity= 1
   ! Set the overall multiplicity = 2S + 1, S = spin on molecule
   ! This tells how many alpha and beta electrons to use.


   crystal= {

   ! Begin crystal information ...


      spacegroup= {  hermann_mauguin_symbol=  "P 21 3" }

      ! This sets the spacegroup. Note: we use double quotes around it
      ! because the string has included spaces. You can input either
      ! the Hermann-Maugion symbols, as tabulated at the start of the
      ! "spacegroup" module, or you can use the Hall-notation symbol.
      ! Standard Hall symbols are given in the "spacegroup.foo"



      unit_cell= {

      ! Begin Unit cell information: straightforward ...

         angles=       90.0   90.0   90.0   Degree   ! Note units:
         dimensions=  5.1305 5.1305 5.1305  Angstrom ! Default is atomic units

      }



      xray_data= {

      ! Begin x-ray data ...


         wavelength= 0.59960
         thermal_smearing_model= tanaka

         ! This option describes how thermal smearing should be
         ! applied to basis functions which are *not* on the same
         ! atom. (ADP's specified later with each atom).  The
         ! "tanaka" scheme is based on gaussian basis functions;
         ! a weighted average of the ADP's on each atom is used, the
         ! weight of the ADP !  on one atom being proportional to the
         ! relative distance of the centre of the product-pair
         ! gaussian to the other atom. You should use Hirshfeld from
         ! now on, unless you know what you are doing.

         partition_model= gaussian

         ! This tells how the molecular fragment in the crystal is to
         ! be partitioned into atoms, in order to correctly calculate
         ! the structure factors. It only has an effect if the
         ! molecular fragment is *not* an even multiple of the
         ! asymmetric unit under the symmetry operations of the
         ! spacegroup. You can choose "gaussian" or "mulliken".

         ! Explanation: when the atoms in the molecular fragment are
         ! mapped into themselves by the crystal symmetry operations
         ! more than one time---this is called the repetition
         ! factor---the density for this atom must be multiplied by
         ! the *inverse* of the repetition factor, otherwise the Fourier
         ! transform will be too large by that factor. If all the
         ! atoms are mapped into themselves by the *same* repetition
         ! factor, there is no problem: we need only scale the
         ! density by the inverse of this common repetiton factor to
         ! calculate the correct structure factor. However, if some
         ! atoms have different repetition factors, we must apply
         ! these different repetition factors to the atomic densities.
         ! Unfortunately, in quantum mechanics the  density cannot be
         ! easily decomposed into atomic contributions. Since we are
         ! using products of pairs of basis functions centered on
         ! atoms, it is natural to use basis functions to define these
         ! atomic densities. This option tells how we apportion the
         ! density to one atom or the other from a pair of basis
         ! functions centered on two different atoms.  This is very
         ! similar to the problem of partitioning the ADP's on two
         ! atoms, in order to calculate the thermally smeared
         ! structure factors.  There are two schemes which can be
         ! applied: "gaussian" and "mulliken".  The "gaussian" scheme
         ! is analogous to the "tanaka" scheme for ADP partitioning. The
         ! "mulliken" scheme is simply an assignment of half the
         ! density of the basis function pair to each atom, and is in
         ! some ways similar to the "stewart" or "coppens" models used
         ! for thermal smearing.

         ! NOTE: when using the Hirshfeld thermal smearing model there
         ! are no overlap (two-center) density contributions so this
         ! option has *no effect*

         ! Using a desired sub-portion of the wavefunction: It is
         ! possible to manually override the repetition factors which
         ! are calculated automatically by the program. This is useful
         ! if you want to calculate the structure factors for, and
         ! hence constrain the wavefunction to, a desired sub-portion
         ! of a molecular fragment. For example, one might wish to
         ! calculate the structure factors from only the central
         ! molecule in a cluster of molecules---and not perform any
         ! wavefunction constraints on the molecules which are not in
         ! the centre of the cluster: these molecules would be there
         ! only to provide a kind of "crystal field" to the central
         ! molecule. In this case one must set the
         ! "repetition_factors" for the non-central cluster atoms to be
         ! zero. Use the "repetition_factors=" command.


         optimise_extinction= FALSE
         !  This is set to be true if a Larsen-like extinction
         ! correction is to be applied and optimised in the model. A
         ! scale factor is automatically refined simultaneously.

         do_residual_cube= FALSE


         REDIRECT data.nh3

         ! Reflection data can be placed in this file or another file
         !  which is given below

      }       ! <--- this ends the "xray_data=" data block

   }          ! <--- this ends the "crystal=" data block



   atoms= {
   !  Begin atom information ...

   ! The selection of the atoms to be used in the constrained
   ! wavefunction procedure is in general non-trivial for systems
   ! with more than one type of molecule (Z'>1). You can use the Crystal
   ! Explorer graphical user interface to choose an appropriate
   ! molecular fragment which is a good starting approximation to the
   ! crystal. Crystal Explorer will generate the atomic
   ! positions in cartesian coordiantes, and also the associated
   ! ADP's. These positions and ADP's can then be entered in an
   ! atoms= data block, as above, but without the "{ axis_system=
   ! crystal }" embedded command (since it specifies that the crystal
   ! axis system is to be used).


      keys= { label= { axis_system= crystal } pos= { units= angstrom^2 } thermal_tensor= }

      ! The "keys=" defines the order of the list of atom data.
      ! The parts "{ axis_system= crystal }" and "{ units= angstrom^2 }"
      ! are called "embedded keywords". These embedded keywords are
      ! executed in between reading data items e.g. after reading the
      ! first value "N" (see below), corresponding to the "label=" key,
      ! the command "{ axis_system= crystal }" is executed.  Then the
      ! three numbers "0.21050  0.21050 0.21050" corresponding to the
      ! next key "pos=" are inputted. And so on for each line.


      data= {

         N  0.2103   0.2103   0.2103   0.03720  0.03720  0.03720  -0.0009  -0.0009  -0.0009
         H  0.3722   0.2627   0.1113   0.0530   0.0530   0.0530    0.00     0.00     0.00
         H  0.1113   0.3722   0.2627   0.0530   0.0530   0.0530    0.00     0.00     0.00
         H  0.2627   0.1113   0.3722   0.0530   0.0530   0.0530    0.00     0.00     0.00

      }  ! <--- this ends the "data=" block

   }     ! <--- this ends the "atoms=" block



   put
   ! This will "put" out all the information we have entered
   ! so we can check it.


   scfdata= {

   ! Begin SCF method data ...

     initial_density=   promolecule

     ! Initial density to start SCF procedure. This uses
     ! "promolecule", a sum of spherical atomic densities, to start the
     ! procedure. You can also use "restricted" if there is a file of
     ! restricted molecular orbitals available from a previous job,
     ! using the *same* basis set.

     kind=  xray_rhf
     ! This is an contrained xray restricted Hartree-Fock calculation

     convergence= 0.001
     ! Convergence on energy difference

     diis= {

     ! Begin Fock matrix extrapolation data ...

        save_iteration=  3
        ! When to start saving Fock matrices for extrapolation

        start_iteration= 4
        ! When to actually start extrapolating from the previously
        ! saved Fock matrices.

        keep= 12

        convergence_tolerance= 0.0001
        ! Convergence on energy gradient

     }

     max_iterations=  150        ! The maximum number of SCF interation


     use_damping=     YES        ! These are used to damp the SCF interation process
   ! damp_factor=     0.20       ! by including 20% of the previous result
     damp_finish=     3

     use_level_shift= NO
     level_shift_finish= 3

     initial_lambda=  0.0000      ! These specify the "lambda value"
     lambda_step=     0.0001      ! used to mix the energy with the chi^2
     lambda_max=      0.0003

     output= NO
     output_results= YES
   }


   scf

   ! Clean up

   delete_scf_archives

}
