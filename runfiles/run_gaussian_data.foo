! Copyright (C) Dylan Jayatilaka, 1999
!
! This library is free software; you can redistribute it and/or
! modify it under the terms of the GNU Library General Public
! License as published by the Free Software Foundation; either
! version 2 of the License, or (at your option) any later version.
!
! This library is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
! Library General Public License for more details.
!
! You should have received a copy of the GNU Library General Public
! License along with this library; if not, write to the
! Free Software Foundation, Inc., 59 Temple Place - Suite 330,
! Boston, MA  02111-1307, USA.
!
! $Id: run_gaussian_data.foo $

program run_GAUSSIAN_DATA

   implicit none


   dat :: MAT{INT}@
   cat :: MAT{STR}@
   mat :: VEC{EMAT{REAL}}@
   l_max,l,first,last, n,i :: INT

   ! Macro to create Tonto system object
   ! Initialise MPI parallel stuff too.
   TONTO_CREATE

   ! Initialise standard I/O files.
   ! Always have this.
   std_time.start_timing
   stdout.create_stdout; stdout.open_for("write")
   stderr.create_stderr; stderr.open_for("write")

   ! Set nice widths
   stdout.set_int_width(3)
   stdout.set_no_of_fields_per_line(10)
   stdout.set_real_width(8)
   stdout.set_real_precision(4)

   ! Set gaussian data to l=6
   l_max = 3
   GAUSSIAN_DATA:set_CRYSTAL23_ordering(TRUE)
   GAUSSIAN_DATA:set_indices(l_max)

   ! Get the gaussian data in one hit
   n = GAUSSIAN_DATA::n_comp_up_to(2*l_max)
   dat.create(n,8)
   dat(:,1) = GAUSSIAN_DATA::px
   dat(:,2) = GAUSSIAN_DATA::py
   dat(:,3) = GAUSSIAN_DATA::pz
   dat(:,4) = GAUSSIAN_DATA::first_nonzero
   dat(:,5) = GAUSSIAN_DATA::index_m1
   dat(:,6) = GAUSSIAN_DATA::index_p1(:,1)
   dat(:,7) = GAUSSIAN_DATA::index_p1(:,2)
   dat(:,8) = GAUSSIAN_DATA::index_p1(:,3)

   cat.create(n,6)
   cat(:,1) = VEC{INT}:to_str(GAUSSIAN_DATA::px)
   cat(:,2) = VEC{INT}:to_str(GAUSSIAN_DATA::py)
   cat(:,3) = VEC{INT}:to_str(GAUSSIAN_DATA::pz)
   cat(:,4) = GAUSSIAN_DATA::pxyz_rep
   cat(:,5) = GAUSSIAN_DATA::pxyz_pow
   cat(:,6) = GAUSSIAN_DATA::p123_rep

   ! Print the gaussian data
   n = GAUSSIAN_DATA::n_comp_up_to(l_max)

   stdout.flush
   stdout.text("Gaussian data:")
   stdout.flush
   stdout.text(". Column 0   is the lexical index")
   stdout.text(". Column 1:3 are the gaussian powers")
   stdout.text(". Column 4   is the first non-zero power")
   stdout.text(". Column 5   is index of gaussian with first non-zero power minus 1")
   stdout.text(". Column 6:8 are indices of the gaussians with power plus 1 in x,y,z")
   stdout.flush
   stdout.put(dat(1:n,:))
   dat.destroy

   stdout.flush
   stdout.text("Gaussian powers, string representation:")
   stdout.flush
   stdout.put(cat(1:n,:))
   cat.destroy
 
   ! Cartesian-to-spherical-harmonic matrices
   mat = GAUSSIAN_DATA::spherical_harmonics_for
 
   ! Print cartesian-to-spherical-harmonic matrices
   stdout.set_using_array_labels(FALSE)
   stdout.flush
   stdout.text("Cartesian-to-spherical-harmonic conversion matrices:")
   do l = 0,l_max
      stdout.flush
      stdout.show("L = ",l)
      stdout.flush
      first = GAUSSIAN_DATA::n_comp_up_to(l-1)
      last  = GAUSSIAN_DATA::n_comp_up_to(l)
      stdout.put(mat(l)[:,:]) ! <---
   end

   ! Clean-up files
   TEXTFILE:destroy(stderr)
   TEXTFILE:destroy(stdout)

   ! Clean-up tonto system
   TONTO_DESTROY

end
